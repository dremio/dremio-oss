<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2017-2019 Dremio Corporation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration for Dremio

  Checkstyle configuration is based on the sun_checks.xml file.

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at http://checkstyle.sf.net
-->

<module name="Checker">

  <!-- Checks whether files end with a new line. -->
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
  </module>

  <!-- Maximum file line length -->
  <module name="FileLength">
    <property name="max" value="3000"/>
  </module>

  <!-- No TAB characters -->
  <module name="FileTabCharacter"/>

  <!-- No Windows newlines -->
  <module name="RegexpMultiline">
    <property name="format" value="\r"/>
    <property name="message" value="No windows newlines"/>
  </module>

  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
  </module>

  <module name="SuppressWarningsFilter" />

  <module name="TreeWalker">
    <module name="SuppressionCommentFilter">
      <property name="offCommentFormat" value="CHECKSTYLE\:OFF ([\w\|]+)" />
      <property name="onCommentFormat" value="CHECKSTYLE\:ON ([\w\|*])" />
      <property name="checkFormat" value="$1"/>
    </module>

    <module name="IllegalImport">
      <!-- For "org.apache.commons.lang.*" classes use the corresponding class from "org.apache.commons.lang3.*" -->
      <property name="illegalPkgs" value="com.google.hive12,com.beust.jcommander.internal,jersey.repackaged,org.apache.commons.lang,hive,oadd,org.kududb.client.shaded,org.jboss.netty,org.apache.curator.shaded,org.apache.htrace.fasterxml,twill"/>
    </module>

    <module name="AvoidStarImport">
      <property name="allowStaticMemberImports" value="true"/>
    </module>

    <module name="ImportOrder">
      <property name="groups" value="java,javax,org,com"/>
      <property name="ordered" value="true"/>
      <property name="separated" value="true"/>
      <property name="option" value="top"/>
      <property name="sortStaticImportsAlphabetically" value="true"/>
    </module>

    <module name="UnusedImports">
    </module>
    <module name="RedundantImport"/>

    <!-- Checks for Javadoc comments. -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocType">
      <property name="scope" value="public"/>
      <property name="allowMissingParamTags" value="true"/>
    </module>
    <module name="JavadocStyle">
      <property name="checkFirstSentence" value="false"/>
    </module>

    <!-- Checks for Naming Conventions. -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName">
      <property name="format"
                value="^logger|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
    </module>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="RegexpSinglelineJava">
      <property name="format" value="[ ]$"/>
      <property name="message" value="Trailing whitespace"/>
    </module>

    <module name="RegexpSinglelineJava">
      <property name="format" value="extends RelShuttleImpl"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Please do not extend RelShuttleImpl, instead extend StatelessRelShuttleImpl"/>
    </module>

    <module name="RegexpSinglelineJava">
      <property name="format" value=" Schema.fromJSON"/>
      <property name="ignoreComments" value="true"/>
      <property name="message" value="Please use DremioArrowSchema.fromJSON instead of Schema.fromJSON"/>
    </module>

    <!-- Modifier Checks -->
    <!-- See http://checkstyle.sourceforge.net/config_modifier.html -->
    <module name="ModifierOrder">
      <message key="mod.order" value="''{0}'' modifier out of order with the JLS suggestions: public protected private abstract static final transient volatile synchronized native strictfp"/>
    </module>
    <!-- module name="RedundantModifier"/ -->

    <!-- Checks for blocks. You know, those {}'s -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="EmptyBlock"/>
    <!-- module name="LeftCurly"/ -->
    <module name="NeedBraces"/>
    <module name="RightCurly"/>

    <!-- Checks for common coding problems -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="IllegalType">
      <property name="tokens" value="PARAMETER_DEF, METHOD_DEF, VARIABLE_DEF"/>
    </module>
    <module name="InnerAssignment"/>
    <module name="MissingSwitchDefault"/>
    <module name="MissingOverride"/>
    <!--module name="RedundantThrows"/-->
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>

    <!-- Checks for class design -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier">
      <property name="ignoreAnnotationCanonicalNames" value="org.junit.Rule" />
      <property name="ignoreAnnotationCanonicalNames" value="org.junit.ClassRule" />
      <property name="ignoreAnnotationCanonicalNames" value="com.google.common.annotations.VisibleForTesting" />
      <property name="ignoreAnnotationCanonicalNames" value="io.protostuff.Tag" />
      <property name="allowPublicImmutableFields" value="true" />
    </module>

    <!-- Miscellaneous other checks. -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <module name="TodoComment"/>
    <module name="UpperEll"/>

    <module name="SuppressWarningsHolder"/>
  </module>

</module>
