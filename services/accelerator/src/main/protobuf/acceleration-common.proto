/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dremio.service.accelerator.proto;

import "job.proto";
import "dataset.proto";

option java_package = "com.dremio.service.accelerator.proto";
option optimize_for = SPEED;

option java_outer_classname = "AccelerationCommonProtobuf";

// NOTE that these messages are used both by DAC and backend. Any change made directly implies a change in client protocol.

// describes whether this acceleration is system or user generated
enum AccelerationMode {
  AUTO = 1;
  MANUAL = 2;
}

enum MaterializationState {
    NEW = 1;
    RUNNING = 2;
    DONE = 3;
    FAILED = 4;
    DELETED = 5;
}

// state to see if layout failed as part of materializations
enum MaterializedLayoutState {
    ACTIVE = 1;
    FAILED = 2;
}

// unique id
message AccelerationId {
  required string id = 1;
}

// type of acceleration
enum AccelerationType {
  DATASET = 1;
  JOB = 2;
}

// unique layout id
message LayoutId {
  required string id = 1;
}

// defines type of layout. ROLLUP for aggregation layouts, RAW otherwise
enum LayoutType {
  RAW = 1;
  AGGREGATION = 2;
  EXTERNAL = 3;
}

// the type of reflection measure.
enum MeasureType {
  UNKNOWN = 0;
  MIN = 1;
  MAX = 2;
  SUM = 3;
  COUNT = 4;
  APPROX_COUNT_DISTINCT = 5;
}

message RowType {
  // row type of the materialization
  repeated com.dremio.service.namespace.dataset.proto.ViewFieldType field = 1;
}

enum DimensionGranularity {
  DATE = 1;
  NORMAL = 2;
}

// distribution strategy for data within a partition
enum PartitionDistributionStrategy {
  CONSOLIDATED = 1;
  STRIPED = 2;
}
