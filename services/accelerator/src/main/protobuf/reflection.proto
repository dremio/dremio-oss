/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dremio.service.reflection.proto;

import "job.proto";

import "reflection-common.proto";
import "reflection-intent.proto";
import "dataset.proto";

option java_package = "com.dremio.service.reflection.proto";
option optimize_for = SPEED;

option java_outer_classname = "ReflectionProtobuf";

// messages used by reflection service

enum ReflectionState {
  ACTIVE = 1;
  REFRESH = 2;
  REFRESHING = 3;
  METADATA_REFRESH = 4;
  FAILED = 5;
  DEPRECATE = 6;
  UPDATE = 7;
  COMPACTING = 8;
}

// represent an individual, concrete acceleration
message ReflectionEntry {
  optional ReflectionId id = 1; // const
  optional int64 version = 2 [deprecated = true];
  optional int64 created_at = 3; // const
  optional int64 modified_at = 4;
  optional int64 legacy_goal_version = 5;
  optional string dataset_id = 6; // REMOVE, if const in reflection goal
  optional int64 dataset_version = 7 [deprecated = true];
  optional string name = 9; // REMOVE, if only accessed in the reflection manager wakeup
  optional ReflectionType type = 10; // REMOVE, if const in reflection goal
  optional RefreshMethod refreshMethod = 13;
  optional string refreshField = 14;
  optional ReflectionState state = 15;
  optional int32 numFailures = 16 [default = 0];
  optional int32 datasetHash = 17;
  optional int64 last_submitted_refresh = 18; // jobStart of last materialization job
  optional int64 last_successful_refresh = 19; // jobEnd of last successful materialization job
  optional bool dont_give_up = 20 [default = false]; // true if the reflection manager should never mark this reflection as FAILED
  optional JobId refresh_job_id = 21;
  optional string tag = 22;
  optional string goalVersion = 23;
  optional int32 shallowDatasetHash = 24;
  optional bool arrowCachingEnabled = 25 [default = false]; // true if boost columns are enabled for caching
  optional ReflectionGoalHash reflection_goal_hash = 26;

}

enum DependencyType {
  DATASET = 1;
  REFLECTION = 2;
  TABLEFUNCTION = 3;
}

message ReflectionDependencyEntry {
  optional DependencyType type = 1;
  repeated string path = 2;
  optional string id = 3;
  optional string sourceName = 4;
  optional string query = 5;
}

message ReflectionDependencies {
  optional ReflectionId id = 1;
  optional int64 version = 2 [deprecated = true];
  repeated ReflectionDependencyEntry entry = 3;
  optional string tag = 4;
}

message ExternalReflection {
  optional string id = 1;
  optional int64 version = 2 [deprecated = true];
  optional string name = 3;
  optional string queryDatasetId = 4;
  optional int32 queryDatasetHash = 5;
  optional string targetDatasetId = 6;
  optional int32 targetDatasetHash = 7;
  optional string tag = 8;
}

message RefreshRequest {
  optional string dataset_id = 1;
  optional int64 version = 2 [deprecated = true];
  optional int64 requested_at = 3;
  optional string tag = 4;
}
