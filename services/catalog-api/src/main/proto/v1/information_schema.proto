/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
syntax = "proto3";

option java_package = "com.dremio.service.catalog";
option optimize_for = SPEED;

option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_outer_classname = "InformationSchemaRPC";

package dremio.catalog;

// Service with an Information Schema like API
service InformationSchemaService {

  rpc ListCatalogs (ListCatalogsRequest) returns (stream Catalog);

  rpc ListSchemata (ListSchemataRequest) returns (stream Schema);

  rpc ListTables (ListTablesRequest) returns (stream Table);

  rpc ListViews (ListViewsRequest) returns (stream View);

  rpc ListTableSchemata (ListTableSchemataRequest) returns (stream TableSchema);

}

// catalog search query message
message SearchQuery {
  // equals clause
  message Equals {
    string field = 1;
    oneof value {
      string stringValue = 2;
      int32 intValue = 3;
    }
  }

  // like clause
  message Like {
    string field = 1;
    string pattern = 2; // according to SQL spec
    string escape = 3; // empty implies no escaping
    bool caseInsensitive = 4;
  }

  // and clause
  message And {
    repeated SearchQuery clauses = 1;
  }

  // or clause
  message Or {
    repeated SearchQuery clauses = 1;
  }

  // a catalog search query has one of the clauses
  oneof query {
    Equals equals = 1;
    And and = 2;
    Or or = 3;
    Like like = 4;
    // TODO(DX-9909): add support for NOT and != operators
  }
}

// request message to list all catalogs
message ListCatalogsRequest {
  SearchQuery query = 1;
  string username = 2;
}

// single row in the "information_schema.catalogs" table
message Catalog {
  string catalog_name = 1;
  string catalog_description = 2;
  string catalog_connect = 3;
}

// request message to list all schemata
message ListSchemataRequest {
  SearchQuery query = 1;
  string username = 2;
}

// Schema type
enum SchemaType {
  UNKNOWN_SCHEMA_TYPE = 0;
  SIMPLE = 1;
}

// single row in the "information_schema.schemata" table
message Schema {
  string catalog_name = 1;
  string schema_name = 2;
  string schema_owner = 3;
  SchemaType schema_type = 4;
  bool is_mutable = 5;
}

// request message to list all tables
message ListTablesRequest {
  SearchQuery query = 1;
  string username = 2;
}

// Table type
enum TableType {
  UNKNOWN_TABLE_TYPE = 0;
  TABLE = 1;
  SYSTEM_TABLE = 2;
  VIEW = 3;
}

// single row in the "information_schema.tables" table
message Table {
  string catalog_name = 1;
  string schema_name = 2;
  string table_name = 3;
  TableType table_type = 4;
}

// request message to list all views
message ListViewsRequest {
  SearchQuery query = 1;
  string username = 2;
}

// single row in the "information_schema.views" table
message View {
  string catalog_name = 1;
  string schema_name = 2;
  string table_name = 3;
  string view_definition = 4;
}

// request message to list all table schema
message ListTableSchemataRequest {
  SearchQuery query = 1;
  string username = 2;
}

// table schema message
message TableSchema {
  string catalog_name = 1;
  string schema_name = 2;
  string table_name = 3;
  bytes batch_schema = 4; // a flat map of batch_schema yields rows in the "information_schema.columns" table
}
