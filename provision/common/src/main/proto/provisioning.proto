/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dremio.provision;

import "provisioning-common.proto";

option java_package = "com.dremio.provision";
option optimize_for = SPEED;

option java_outer_classname = "ProvisioningProtobuf";

// unique runId
message RunId {
  required string id = 1;
}

message ClusterConfig {
 required ClusterType clusterType = 1;
 optional uint64 version = 2 [deprecated = true];
 optional ClusterSpec clusterSpec = 3;
 optional string name = 4;
 repeated Property subProperty = 5;
 optional DistroType distroType = 6 [default = OTHER];
 optional bool isSecure = 7 [default = false];
 optional string tag = 8;
 optional AwsProps awsProps = 9;
 optional bool allowAutoStart = 10 [default = false];
 optional bool allowAutoStop = 11 [default = false];
 optional int64 shutdownInterval = 12 [default = 7200000];
}

message ClusterSpec {
 required int32 containerCount = 1;
 optional int32 memoryMBOnHeap = 2;
 optional int32 memoryMBOffHeap = 3;
 optional int32 virtualCoreCount = 4;
 optional string queue = 5;
}

message Cluster {
 required ClusterId id = 1;
 required ClusterState state = 2;
 required ClusterConfig clusterConfig = 3;
 optional string error = 4;
 optional string detailedError = 5;
 optional ClusterState desiredState = 6;
 optional RunId runId = 7;
 optional int64 startTime = 8;
 optional int64 idleTime = 9;
 optional int64 stateChangeTime = 10;
}

message AwsProps {

  enum AuthMode {
    UNKNOWN = 0;
    AUTO = 1;
    SECRET = 2;
  }

  message AwsTag {
    required string key = 1;
    required string value = 2;
  }

  message AwsConnectionProps {
    optional AuthMode authMode = 1;
    optional string assumeRole = 2; // optional, role for the ec2 commands
    optional string accessKey = 3;
    optional string secretKey = 4;
    optional string region = 5;
    optional string endpoint = 6;
    optional string sts_endpoint = 7;
  }

  optional string vpc = 1;
  optional string subnetId = 2;
  optional string nodeIamInstanceProfile = 3; // role for the started ec2 instances, required
  optional string amiId = 4; // optional, used to override the default ami
  optional bool useClusterPlacementGroup = 5 [default = true];
  optional string securityGroupId = 6;
  optional string sshKeyName = 7;
  optional string instanceType = 8;
  optional AwsConnectionProps connectionProps = 9;
  optional string extraConfProps = 10;
  repeated AwsTag awsTags = 11;

}
