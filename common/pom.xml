<?xml version="1.0"?>
<!--

    Copyright (C) 2017-2019 Dremio Corporation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.dremio</groupId>
    <artifactId>dremio-parent</artifactId>
    <version>4.7.3-202008270723550726-918276ee</version>
  </parent>

  <artifactId>dremio-common</artifactId>
  <packaging>jar</packaging>
  <name>Common</name>

  <properties>
    <flatc.download.skip>false</flatc.download.skip>
    <flatc.executable>${project.build.directory}/flatc-${os.detected.classifier}-${fbs.version}.exe</flatc.executable>
    <flatc.generated.files>${project.build.directory}/generated-sources/flatc</flatc.generated.files>
    <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin> <!-- generate sources from fmpp -->
        <groupId>com.dremio.tools</groupId>
        <artifactId>dremio-fmpp-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-fmpp</id>
            <phase>generate-sources</phase>
            <goals><goal>generate</goal></goals>
            <configuration>
              <config>${project.basedir}/src/main/codegen/config.fmpp</config>
              <output>${project.build.directory}/generated-sources/fmpp</output>
              <templates>${project.basedir}/src/main/codegen/templates</templates>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>src/main/checkstyle/checkstyle-config.xml</configLocation>
          <suppressionsLocation>src/main/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <validHeaders>
            <validHeader>src/main/licenses/io.protostuff.JsonIOUtils.license.txt</validHeader>
          </validHeaders>
          <excludes combine.children="append">
            <exclude>src/test/resources/maprtest/testconfig/login.conf</exclude> <!-- it needs Java style, was handedited -->
          </excludes>
        </configuration>
      </plugin>

      <plugin> <!-- download the flatbuffer compiler -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-flatc</id>
            <phase>initialize</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.github.icexelloss</groupId>
                  <artifactId>flatc-${os.detected.classifier}</artifactId>
                  <version>${fbs.version}</version>
                  <type>exe</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
              <skip>${flatc.download.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution> <!-- make the flatbuffer compiler executable -->
            <id>script-chmod</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <executable>chmod</executable>
              <arguments>
                <argument>+x</argument>
                <argument>${project.build.directory}/flatc-${os.detected.classifier}-${fbs.version}.exe</argument>
              </arguments>
              <skip>${flatc.download.skip}</skip>
            </configuration>
          </execution>
          <execution> <!-- generate sources by executing the flatbuffer compiler -->
            <id>gen-flatbuf</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <executable>${flatc.executable}</executable>
              <arguments>
                <argument>-j</argument>
                <argument>-o</argument>
                <argument>${flatc.generated.files}</argument>
                <argument>${basedir}/src/main/flatbuf/OldSchema.fbs</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>process</id>
            <phase>process-classes</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>com.dremio.common.scanner.BuildTimeScan</mainClass>
              <arguments>
                <argument>${project.build.outputDirectory}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- add generated sources to classpath -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-generated-sources-to-classpath</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${flatc.generated.files}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-protocol</artifactId>
    </dependency>

    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <scope>provided</scope>
    </dependency>    

    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-json</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.hubspot.jackson</groupId>
      <artifactId>jackson-datatype-protobuf</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.slugify</groupId>
      <artifactId>slugify</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.flatbuffers</groupId>
      <artifactId>flatbuffers-java</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <dependency>
      <!-- add as provided scope so that we can compile TestTools.  Should only be ever used in a test scenario where someone else is bringing JUnit in. -->
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <!-- add as provided scope so that we can compile TestTools.  Should only be ever used in a test scenario where someone else is bringing Hamcrest in. -->
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
    </dependency>
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <scope>provided</scope> <!-- only provided because a runtime dependency for all other modules -->
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.opentracing</groupId>
      <artifactId>opentracing-noop</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
  </dependencies>
</project>
