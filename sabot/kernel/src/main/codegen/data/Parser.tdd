#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{
  # Generated parser implementation class package and name
  package: "com.dremio.exec.planner.sql.parser.impl",
  class: "ParserImpl",

  # List of import statements.
  imports: [
    "com.dremio.exec.planner.sql.parser.*",
    "org.apache.calcite.sql.SqlBasicCall",
    "org.apache.calcite.util.*",
    "com.dremio.exec.catalog.TableVersionType",
    "com.dremio.exec.catalog.TableVersionOperator",
    "com.dremio.exec.tablefunctions.TableMacroNames",
    "com.dremio.exec.util.*",
    "com.dremio.exec.planner.sql.parser.SqlCreateReflection.MeasureType",
    "java.util.*"
  ]

  joinTypes: []

  # List of keywords.
  keywords: [
    "DATABASES",
    "SCHEMAS",
    "LOCALSORT",
    "ARROW",
    "CACHE",
    "TABLES",
    "USE",
    "FILES",
    "PARTITIONS",
    "REFRESH",
    "METADATA",
    "IF"
    "STORE",
    "SINGLE",
    "WRITER",
    "HASH",
    "ROUNDROBIN",
    "DISTRIBUTE",
    "STRIPED",
    "CONSOLIDATED",
    "ACCELERATION",
    "AGGREGATE",
    "LAYOUT",
    "REFLECTION",
    "DIMENSIONS",
    "RAW",
    "DISPLAY",
    "ENABLE",
    "DISABLE",
    "FORGET",
    "PDS",
    "VDS",
    "DATASET",
    "STATUS",
    "LOAD",
    "MATERIALIZATION",
    "APPROXIMATE",
    "APPROX",
    "STATS",
    "COMPACT",
    "AUTO",
    "AVOID",
    "PROMOTION",
    "FORCE",
    "LAZY",
    "MAINTAIN",
    "MISSING",
    "COLUMNS",
    "CHANGE",
    "CLEAR",
    "JOB",
    "HISTORY",
    "REFLECTIONS",
    "FOLDER",
    "MODIFY",
    "MANAGE",
    "GRANTS",
    "QUERY",
    "DATASETS",
    "ANALYZE",
    "STATISTICS",
    "COMPUTE",
    "OWNERSHIP",
    "OPERATE",
    "MONITOR",
    "ORG",
    "CLOUD",
    "PROJECT",
    "ROUTE",
    "QUEUE",
    "ENGINE",
    "PASSWORD",
    "UNSET",
    "LEARNING",
    "BRANCH",
    "BRANCHES",
    "TAG",
    "TAGS",
    "LOGS",
    "APPLICATION",
    "OAUTH",
    "PROVIDER",
    "TOKENS",
    "CONFIGURE",
    "ASSIGN",
    "SNAPSHOT",
    "REFERENCE",
    "LOCATION"
  ]

  nonReservedKeywords: [
    "A"
    "ABSOLUTE"
    "ACCELERATION"
    "ACTION"
    "ADA"
    "ADD"
    "ADMIN"
    "AFTER"
    "AGGREGATE"
    "ALTER"
    "ALWAYS"
    "APPLICATION",
    "APPLY"
    "APPROX"
    "APPROXIMATE"
    "ARROW"
    "ASC"
    "ASSIGN"
    "ASSERTION"
    "ASSIGNMENT"
    "ATTRIBUTE"
    "ATTRIBUTES"
    "AUTO"
    "AVOID"
    "BEFORE"
    "BERNOULLI"
    "BRANCH"
    "BRANCHES"
    "BREADTH"
    "C"
    "CACHE"
    "CASCADE"
    "CATALOG"
    "CATALOG_NAME"
    "CENTURY"
    "CHAIN"
    "CHANGE"
    "CHARACTERISTICS"
    "CHARACTERS"
    "CHARACTER_SET_CATALOG"
    "CHARACTER_SET_NAME"
    "CHARACTER_SET_SCHEMA"
    "CLASS_ORIGIN"
    "CLEAR"
    "CLOUD"
    "COBOL"
    "COLLATION"
    "COLLATION_CATALOG"
    "COLLATION_NAME"
    "COLLATION_SCHEMA"
    "COLUMN"
    "COLUMNS"
    "COLUMN_NAME"
    "COMMAND_FUNCTION"
    "COMMAND_FUNCTION_CODE"
    "COMMIT"
    "COMMITTED"
    "CONDITION_NUMBER"
    "CONFIGURE"
    "CONNECTION"
    "CONNECTION_NAME"
    "CONSOLIDATED"
    "CONSTRAINTS"
    "CONSTRAINT_CATALOG"
    "CONSTRAINT_NAME"
    "CONSTRAINT_SCHEMA"
    "CONSTRUCTOR"
    "CONTINUE"
    "CURSOR_NAME"
    "DATA"
    "DATABASE"
    "DATASET"
    "DATASETS"
    "DATETIME_INTERVAL_CODE"
    "DATETIME_INTERVAL_PRECISION"
    "DECADE"
    "DEFAULTS"
    "DEFERRABLE"
    "DEFERRED"
    "DEFINED"
    "DEFINER"
    "DEGREE"
    "DEPTH"
    "DERIVED"
    "DESC"
    "DESCRIPTION"
    "DESCRIPTOR"
    "DIAGNOSTICS"
    "DIMENSIONS"
    "DISABLE"
    "DISPATCH"
    "DISPLAY"
    "DISTRIBUTE"
    "DOMAIN"
    "DOW"
    "DOY"
    "DYNAMIC_FUNCTION"
    "DYNAMIC_FUNCTION_CODE"
    "ENABLE"
    "ENGINE"
    "EPOCH"
    "EXCEPTION"
    "EXCLUDE"
    "EXCLUDING"
    "FINAL"
    "FIRST"
    "FOLDER"
    "FOLLOWING"
    "FORCE"
    "FORGET"
    "FORTRAN"
    "FOUND"
    "FRAC_SECOND"
    "G"
    "GENERAL"
    "GENERATED"
    "GEOMETRY"
    "GO"
    "GOTO"
    "GRANTED"
    "GRANTS"
    "HASH"
    "HIERARCHY"
    "HISTORY"
    "IMMEDIATE"
    "IMMEDIATELY"
    "IMPLEMENTATION"
    "INCLUDING"
    "INCREMENT"
    "INITIALLY"
    "INPUT"
    "INSTANCE"
    "INSTANTIABLE"
    "INTO"
    "INVOKER"
    "ISOLATION"
    "JAVA"
    "JOB"
    "JSON"
    "K"
    "KEY"
    "KEY_MEMBER"
    "KEY_TYPE"
    "LABEL"
    "LAST"
    "LAYOUT"
    "LAZY"
    "LEARNING"
    "LENGTH"
    "LEVEL"
    "LIBRARY"
    "LOCALSORT"
    "LOCATION"
    "LOCATOR"
    "LOGS"
    "M"
    "MAINTAIN"
    "MANAGE"
    "MAP"
    "MATCHED"
    "MATERIALIZATION"
    "MAXVALUE"
    "MEASURES"
    "MERGE"
    "MESSAGE_LENGTH"
    "MESSAGE_OCTET_LENGTH"
    "MESSAGE_TEXT"
    "MICROSECOND"
    "MILLENNIUM"
    "MINVALUE"
    "MISSING"
    "MODIFY"
    "MONITOR"
    "MORE_"
    "MUMPS"
    "NAME"
    "NAMES"
    "NESTING"
    "NORMALIZED"
    "NULLABLE"
    "NULLS"
    "NUMBER"
    "OAUTH",
    "OBJECT"
    "OCTETS"
    "OPERATE"
    "OPTION"
    "OPTIONS"
    "ORDERING"
    "ORDINALITY"
    "ORG"
    "OTHERS"
    "OUTPUT"
    "OVERRIDING"
    "OWNERSHIP"
    "PAD"
    "PARAMETER_MODE"
    "PARAMETER_NAME"
    "PARAMETER_ORDINAL_POSITION"
    "PARAMETER_SPECIFIC_CATALOG"
    "PARAMETER_SPECIFIC_NAME"
    "PARAMETER_SPECIFIC_SCHEMA"
    "PARTIAL"
    "PASCAL"
    "PASSTHROUGH"
    "PASSWORD"
    "PAST"
    "PATH"
    "PDS"
    "PLACING"
    "PLAN"
    "PLI"
    "PRECEDING"
    "PRESERVE"
    "PRIOR"
    "PRIVILEGES"
    "PROJECT"
    "PROMOTION"
    "PROVIDER",
    "PUBLIC"
    "QUARTER"
    "QUERY"
    "QUEUE"
    "RAW"
    "READ"
    "REFERENCE"
    "REFLECTION"
    "REFLECTIONS"
    "RELATIVE"
    "REPEATABLE"
    "REPLACE"
    "RESTART"
    "RESTRICT"
    "RETURNED_CARDINALITY"
    "RETURNED_LENGTH"
    "RETURNED_OCTET_LENGTH"
    "RETURNED_SQLSTATE"
    "ROLE"
    "ROUNDROBIN"
    "ROUTE"
    "ROUTINE"
    "ROUTINE_CATALOG"
    "ROUTINE_NAME"
    "ROUTINE_SCHEMA"
    "ROW_COUNT"
    "SCALE"
    "SCHEMA"
    "SCHEMA_NAME"
    "SCOPE_CATALOGS"
    "SCOPE_NAME"
    "SCOPE_SCHEMA"
    "SECTION"
    "SECURITY"
    "SELF"
    "SEQUENCE"
    "SERIALIZABLE"
    "SERVER"
    "SERVER_NAME"
    "SESSION"
    "SETS"
    "SIMPLE"
    "SINGLE"
    "SIZE"
    "SNAPSHOT"
    "SOURCE"
    "SPACE"
    "SPECIFIC_NAME"
    "SQL_BIGINT"
    "SQL_BINARY"
    "SQL_BIT"
    "SQL_BLOB"
    "SQL_BOOLEAN"
    "SQL_CHAR"
    "SQL_CLOB"
    "SQL_DATE"
    "SQL_DECIMAL"
    "SQL_DOUBLE"
    "SQL_FLOAT"
    "SQL_INTEGER"
    "SQL_INTERVAL_DAY"
    "SQL_INTERVAL_DAY_TO_HOUR"
    "SQL_INTERVAL_DAY_TO_MINUTE"
    "SQL_INTERVAL_DAY_TO_SECOND"
    "SQL_INTERVAL_HOUR"
    "SQL_INTERVAL_HOUR_TO_MINUTE"
    "SQL_INTERVAL_HOUR_TO_SECOND"
    "SQL_INTERVAL_MINUTE"
    "SQL_INTERVAL_MINUTE_TO_SECOND"
    "SQL_INTERVAL_MONTH"
    "SQL_INTERVAL_SECOND"
    "SQL_INTERVAL_YEAR"
    "SQL_INTERVAL_YEAR_TO_MONTH"
    "SQL_LONGVARBINARY"
    "SQL_LONGVARCHAR"
    "SQL_LONGVARNCHAR"
    "SQL_NCHAR"
    "SQL_NCLOB"
    "SQL_NUMERIC"
    "SQL_NVARCHAR"
    "SQL_REAL"
    "SQL_SMALLINT"
    "SQL_TIME"
    "SQL_TIMESTAMP"
    "SQL_TINYINT"
    "SQL_TSI_DAY"
    "SQL_TSI_FRAC_SECOND"
    "SQL_TSI_HOUR"
    "SQL_TSI_MICROSECOND"
    "SQL_TSI_MINUTE"
    "SQL_TSI_MONTH"
    "SQL_TSI_QUARTER"
    "SQL_TSI_SECOND"
    "SQL_TSI_WEEK"
    "SQL_TSI_YEAR"
    "SQL_VARBINARY"
    "SQL_VARCHAR"
    "STATE"
    "STATEMENT"
    "STATS"
    "STATUS"
    "STORE"
    "STRIPED"
    "STRUCTURE"
    "STYLE"
    "SUBCLASS_ORIGIN"
    "SUBSTITUTE"
    "TABLE_NAME"
    "TAG"
    "TAGS"
    "TEMPORARY"
    "TIES"
    "TIMESTAMPADD"
    "TIMESTAMPDIFF"
    "TOP_LEVEL_COUNT"
    "TOKENS",
    "TRANSACTION"
    "TRANSACTIONS_ACTIVE"
    "TRANSACTIONS_COMMITTED"
    "TRANSACTIONS_ROLLED_BACK"
    "TRANSFORM"
    "TRANSFORMS"
    "TRIGGER_CATALOG"
    "TRIGGER_NAME"
    "TRIGGER_SCHEMA"
    "TYPE"
    "UNBOUNDED"
    "UNCOMMITTED"
    "UNDER"
    "UNNAMED"
    "USAGE"
    "USER_DEFINED_TYPE_CATALOG"
    "USER_DEFINED_TYPE_CODE"
    "USER_DEFINED_TYPE_NAME"
    "USER_DEFINED_TYPE_SCHEMA"
    "VDS"
    "VERSION"
    "VIEW"
    "WEEK"
    "WORK"
    "WRAPPER"
    "WRITE"
    "WRITER"
    "XML"
    "ZONE"
  ]

  # List of methods for parsing custom SQL statements.
  statementParserMethods: [
    "SqlShowTables()",
    "SqlShowSchemas()",
    "SqlShowBranches()",
    "SqlShowTags()",
    "SqlShowLogs()",
    "SqlDescribeTable()",
    "SqlUseVersion()",
    "SqlUseSchema()",
    "SqlCreateOrReplaceView()",
    "SqlDropView()",
    "SqlShowFiles()",
    "SqlCreateBranch()",
    "SqlCreateTable()",
    "SqlCreateTag()",
    "SqlInsertTable()",
    "SqlDropBranch()",
    "SqlDropTag()",
    "SqlDropTable()",
    "SqlTruncateTable()",
    "SqlAccel()",
    "SqlRefreshReflection()",
    "SqlLoadMaterialization()",
    "SqlCompactMaterialization()",
    "SqlExplainJson()",
    "SqlAlterClearPlanCache()",
    "SqlGrant()",
    "SqlRevoke()",
    "SqlCreateRole()",
    "SqlRevokeRole()",
    "SqlCreateUser()",
    "SqlAlterUser()",
    "SqlDropUser()",
    "SqlDropRole()",
    "SqlAnalyzeTableStatistics()",
    "SqlRefreshDataset()",
    "SqlAlterBranch()",
    "SqlAssignTag()"
  ]

  # List of methods for parsing custom literals.
  # Example: ParseJsonLiteral().
  literalParserMethods: [
    "LuceneQuery()"
  ]

  # List of methods for parsing custom data types.
  dataTypeParserMethods: [
     "RowTypeName()",
     "ArrayTypeName()"
  ]


  # List of methods for parsing extensions to "ALTER <scope>" calls.
  # Each must accept arguments "(SqlParserPos pos, String scope)".
  # Example: "SqlUploadJarNode"
  alterStatementParserMethods: [
  ]

  # List of methods for parsing extensions to "CREATE [OR REPLACE]" calls.
  # Each must accept arguments "(SqlParserPos pos, boolean replace)".
  createStatementParserMethods: [
  ]

  # List of methods for parsing extensions to "DROP" calls.
  # Each must accept arguments "(SqlParserPos pos)".
  dropStatementParserMethods: [
  ]

  # Method for parsing a table version extension to the TableRef2 production.
  # This method must accept a single argument "(SqlNode tableRef)".
  # Return type of method implementation should be 'SqlNode'.
  tableVersionContextParserMethod: "TableWithVersionContext"

  # List of files in @includes directory that have parser method
  # implementations for custom SQL statements, literals or types
  # given as part of "statementParserMethods", "literalParserMethods" or
  # "dataTypeParserMethods".
  implementationFiles: [
    "parserImpls.ftl",
    "alter.ftl",
    "lucene.ftl",
    "explainjson.ftl",
    "grant.ftl",
    "role.ftl",
    "user.ftl",
    "versionSupport.ftl"
  ]

  includeCompoundIdentifier: false,
  includeBraces: false,
  includeAdditionalDeclarations: true,
  identifierMaxLength: 1024
}
