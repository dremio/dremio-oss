#
# Copyright (C) 2017-2019 Dremio Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

//  This file tells Dremio to consider this module when class path scanning.
//  This file can also include any supplementary configuration information.
//  This file is in HOCON format, see https://github.com/typesafehub/config/blob/master/HOCON.md for more information.

dremio {
  classpath.scanning {
    base.classes : ${?dremio.classpath.scanning.base.classes} [
      com.dremio.exec.expr.Function,
      com.dremio.exec.expr.fn.PluggableFunctionRegistry,
      com.dremio.exec.physical.base.PhysicalOperator,
      com.dremio.exec.store.dfs.FormatPlugin,
      com.dremio.datastore.api.LegacyStoreCreationFunction,
      "com.dremio.sabot.op.spi.SingleInputOperator$Creator",
      "com.dremio.sabot.op.spi.DualInputOperator$Creator",
      "com.dremio.sabot.op.spi.ProducerOperator$Creator",
      "com.dremio.sabot.op.spi.TerminalOperator$Creator",
      "com.dremio.sabot.op.spi.ProducerOperator$ReceiverCreator",
      "com.dremio.exec.planner.RulesFactory"
    ],

    annotations += com.dremio.exec.expr.annotations.FunctionTemplate
    annotations += com.dremio.exec.catalog.conf.SourceType

    packages : ${?dremio.classpath.scanning.packages} [
      com.dremio.exec.ExecConstants
      com.dremio.exec.catalog,
      com.dremio.exec.compile,
      com.dremio.exec.expr,
      com.dremio.exec.physical,
      com.dremio.exec.planner.physical,
      com.dremio.exec.server.options,
      com.dremio.exec.store,
      com.dremio.exec.store.dfs.implicit.ImplicitFilesystemColumnFinder,
      com.dremio.exec.rpc.user.security,
      com.dremio.sabot
      com.dremio.sabot.op.aggregate.vectorized
      com.dremio.sabot.rpc.user
    ]
  }
}

dremio.exec: {
  rpc: {
    user: {
      server: {
        threads: 1,
        memory: {
          reservation: 0,
          maximum: 9223372036854775807
        }
      }
    },
    bit: {
      timeout: 300,
      server: {
        port : 31011,
        retry:{
          count: 7200,
          delay: 500
        },
        threads: 10
        memory: {
          control: {
            reservation: 0,
            maximum: 9223372036854775807
          },
          data: {
            reservation: 0,
            maximum: 9223372036854775807
          }
        }
      }
    },
    use.ip : false
    publishedhost : ""
  },
  optimizer: {
    implementation: "com.dremio.exec.opt.IdentityOptimizer"
  },
  storage: {
    registry: "com.dremio.exec.store.StoragePluginRegistryImpl",
    file: {
      text: {
        buffer.size: 262144,
        batch.size: 4000
      }
    }
  },
  http: {
    enabled: true,
    ssl_enabled: false,
    port: 8047
    session_max_idle_secs: 3600 # Default value 1hr
  },
  network: {
    start: 35000
  },
  work: {
    affinity.factor: 1.2
  },
  sys.store.provider: {
    class: "com.dremio.exec.store.sys.store.provider.ZookeeperPersistentStoreProvider",
    local: {
      path: "/tmp/dremio",
      write: true
    }
  },
  security.user.auth {
    enabled: false,
    impl: "pam",
    pam_profiles: [ "sudo", "login" ]
  },
  trace: {
    directory: "/tmp/dremio-trace",
    filesystem: "file:///"
  },
  tmp: {
    directories: ["/tmp/dremio"],
    filesystem: "dremio-local:///"
  },
  buffer:{
    size: "6",
    spooling: {
      delete: true,
      size: 6
    }
  },
  compile: {
    compiler: "DEFAULT",
    debug: true,
    janino_maxsize: 262144,
    cache_max_size: 1000
  },
  sort: {
    purge.threshold : 1000,
    external: {
      batch.size : 4000,
      spill: {
        batch.size : 4000,
        group.size : 40000,
        threshold : 40000,
        directories : [ "/tmp/dremio/spill" ],
        fs : "file:///"
      }
    }
  },
  memory: {
    operator: {
      max: 20000000000,
      initial: 10000000
    },
    fragment: {
      max: 20000000000,
      initial: 20000000
    }
  },
  debug: {
    return_error_for_failure_in_cancelled_fragments: false
  }
}

dremio.test.parquet.schema.fallback.disabled: false
