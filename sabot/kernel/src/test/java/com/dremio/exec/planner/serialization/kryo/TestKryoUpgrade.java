/*
 * Copyright (C) 2017-2019 Dremio Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.dremio.exec.planner.serialization.kryo;

import static org.junit.Assert.assertEquals;

import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.junit.Test;
import org.objenesis.strategy.StdInstantiatorStrategy;

import com.dremio.common.expression.SchemaPath;
import com.esotericsoftware.kryo.Kryo;
import com.esotericsoftware.kryo.io.Input;
import com.google.common.io.Resources;

public class TestKryoUpgrade {
  @Test
  public void testSchemaPathUpgrade() throws Exception {
    /*
      Pre-4.2 serialized SchemaPath.  Generated by this code:

      final PathSegment.NameSegment nameSegment = new PathSegment.NameSegment("path");
      final SchemaPath schemaPath = new SchemaPath(nameSegment);

      final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
      final Output output = new Output(outputStream);

      final Kryo kryo = new Kryo();
      kryo.writeObject(output, schemaPath);

      FileUtils.writeByteArrayToFile(new File("schemapath.kryo"), output.getBuffer());
    */
    final URL resource = Resources.getResource("kryo/schemapath.kryo");
    final byte[] bytes = Files.readAllBytes(Paths.get(resource.getPath()));

    final Kryo kryo = new Kryo();
    kryo.setInstantiatorStrategy(new Kryo.DefaultInstantiatorStrategy(new StdInstantiatorStrategy()));

    final SchemaPath schemaPath = kryo.readObject(new Input(bytes), SchemaPath.class);
    assertEquals("path", schemaPath.getAsUnescapedPath());
  }
}
