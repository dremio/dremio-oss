<?xml version="1.0"?>
<!--

    Copyright (C) 2017 Dremio Corporation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.dremio.sabot</groupId>
    <artifactId>dremio-sabot-parent</artifactId>
    <version>1.2.2-201710100154510864-d40e31c</version>
  </parent>
  <artifactId>dremio-sabot-kernel</artifactId>
  <name>Sabot - Kernel</name>

  <dependencies>

    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-common</artifactId>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-base-rpc</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-coordinator</artifactId>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-metrics</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.dremio.contrib</groupId>
      <artifactId>dremio-slim-shade</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>koloboke-impl-jdk6-7</artifactId>
          <groupId>com.koloboke</groupId>
        </exclusion>
        <exclusion>
          <artifactId>stream</artifactId>
          <groupId>com.clearspring.analytics</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-namespace</artifactId>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-scheduler</artifactId>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-fabric-rpc</artifactId>
    </dependency>

    <dependency>
      <groupId>com.dremio.services</groupId>
      <artifactId>dremio-services-users</artifactId>
    </dependency>

    <dependency>
      <groupId>io.protostuff</groupId>
      <artifactId>protostuff-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>de.vandermeer</groupId>
      <artifactId>asciitable</artifactId>
      <version>0.2.5</version>
    </dependency>

    <dependency>
      <groupId>com.dremio.contrib</groupId>
      <artifactId>dremio-tpch-sample-data</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
    </dependency>

    <dependency>
      <groupId>com.univocity</groupId>
      <artifactId>univocity-parsers</artifactId>
      <version>1.3.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-math</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.paranamer</groupId>
      <artifactId>paranamer</artifactId>
      <version>2.5.6</version>
      <exclusions>
        <!-- Exclude Paranamer's dependency on mockito-all, which has a Jar
             file that contains old Hamcrest 1.1 classes (rather than declaring
             a dependency on Hamcrest).  (See DRILL-2130.) -->
        <exclusion>
          <artifactId>mockito-all</artifactId>
          <groupId>org.mockito</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.codemodel</groupId>
      <artifactId>codemodel</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-jetty-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo</artifactId>
      <version>4.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>3.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-afterburner</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-mvc-freemarker</artifactId>
      <version>${jersey.version}</version>
      <exclusions>
          <exclusion>
            <artifactId>servlet-api</artifactId>
            <groupId>javax.servlet</groupId>
          </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite</groupId>
      <artifactId>calcite-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.calcite.avatica</groupId>
      <artifactId>avatica</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.jpam</groupId>
      <artifactId>jpam</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>${freemarker.version}</version>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>foodmart-data-json</artifactId>
      <version>0.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-column</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-hadoop</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-hadoop</artifactId>
      <type>test-jar</type>
      <version>${parquet.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-format</artifactId>
      <version>2.3.0-incubating-201701192040120487-851e12d</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-common</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-jackson</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-encoding</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-generator</artifactId>
      <version>${parquet.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-protocol</artifactId>
    </dependency>
    <dependency>
      <groupId>com.dremio.sabot</groupId>
      <artifactId>dremio-sabot-logical</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.dremio</groupId>
      <artifactId>dremio-common</artifactId>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>1.1.4</version>
    </dependency>
    <dependency>
      <groupId>com.carrotsearch</groupId>
      <artifactId>hppc</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>2.7.6</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>commons-compiler-jdk</artifactId>
      <version>2.7.6</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <scope>test</scope>
      <classifier>tests</classifier>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>1.7.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro-mapred</artifactId>
      <version>1.7.7</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <scope>test</scope>
      <classifier>tests</classifier>
      <exclusions>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-all</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.14</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.14</version>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>default-hadoop</id>
      <activation>
        <property>
          <name>!alt-hadoop</name>
        </property>
      </activation>
    </profile>
    <profile>
      <id>cdh4</id>
      <dependencies>
        <dependency>
          <artifactId>hadoop-common</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hdp</id>
      <dependencies>
        <dependency>
          <artifactId>hadoop-common</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>largeTests</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>include-large-tests</id>
                <phase>test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/TestLargeFileCompilation.java</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <excludes combine.children="append">
            <exclude>**/src/test/resources/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.protostuff</groupId>
        <artifactId>protostuff-maven-plugin</artifactId>
        <configuration>
          <protoModules>
            <protoModule>
              <source>src/main/protobuf</source>
              <outputDir>${project.build.directory}/generated-sources/protostuff</outputDir>
              <output>com/dremio/protostuff/compiler/dremio_java_bean.java.stg</output>
              <options>
                <property>
                  <name>generate_field_map</name>
                  <value>true</value>
                </property>
                <property>
                  <name>builder_pattern</name>
                  <value>true</value>
                </property>
              </options>
            </protoModule>
          </protoModules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
        <!-- Extract parser grammar template from calcite-core.jar and put
          it under ${project.build.directory}/codegen/templates where all freemarker templates are. -->
          <execution>
            <id>unpack-parser-template</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.calcite</groupId>
                  <artifactId>calcite-core</artifactId>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/</outputDirectory>
                  <includes>codegen/templates/Parser.jj</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>

        <!-- Extract ValueVectorTypes.tdd from arrow-vector.jar and put
          it under ${project.build.directory}/codegen/data where all freemarker data files are. -->
          <execution>
            <id>unpack-vector-types</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.apache.arrow</groupId>
                  <artifactId>arrow-vector</artifactId>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/</outputDirectory>
                  <includes>codegen/data/ValueVectorTypes.tdd</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <includes>**/*.java</includes>
          <encoding>UTF-8</encoding>
          <failsOnError>true</failsOnError>
          <consoleOutput>true</consoleOutput>
          <includeResources>true</includeResources>
          <includeTestResources>true</includeTestResources>
          <resourceIncludes>**/*.properties,**/*.conf,**/*.json,**/*.xml</resourceIncludes>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <configLocation>src/main/resources/checkstyle-config.xml</configLocation>
          <suppressionsLocation>src/main/resources/checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
        <executions>
          <execution>
            <id>checkstyle-validation</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-fmpp-pre</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>set-system-properties</goal>
            </goals>
            <configuration>
              <properties>
                <property>
                  <name>maven.project.version</name>
                  <value>${project.version}</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- generate sources from fmpp -->
        <groupId>com.dremio.tools</groupId>
        <artifactId>dremio-fmpp-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-fmpp</id>
            <phase>generate-sources</phase>
            <goals><goal>generate</goal></goals>
            <configuration>
              <config>${project.build.directory}/codegen/config.fmpp</config>
              <output>${project.build.directory}/generated-sources/fmpp</output>
              <templates>${project.build.directory}/codegen/templates</templates>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- generate the parser (Parser.jj is itself generated wit fmpp above) -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>javacc</id>
            <phase>generate-sources</phase>
            <goals><goal>javacc</goal></goals>
            <configuration>
              <sourceDirectory>${project.build.directory}/generated-sources/fmpp</sourceDirectory>
              <includes>
                <include>**/*.jj</include>
              </includes>
              <lookAhead>2</lookAhead>
              <isStatic>false</isStatic>
              <outputDirectory>${project.build.directory}/generated-sources/javacc</outputDirectory>
<!--
              <debugParser>true</debugParser>
              <debugLookAhead>true</debugLookAhead>
              <debugTokenManager>true</debugTokenManager>
 -->
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin> <!-- source file must end up in the jar for janino parsing -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-sources-as-resources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/java</directory>
                  <includes>
                    <include>com/dremio/exec/expr/fn/**/*Function.java</include>
                    <include>com/dremio/exec/expr/fn/**/*Functions.java</include>
                    <include>com/dremio/exec/expr/fn/impl/**/*.java</include>
                    <include>com/dremio/exec/store/NewValueFunction.java</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/generated-sources/fmpp</directory>
                  <includes>
                    <include>com/dremio/exec/expr/fn/impl/**/*.java</include>
                  </includes>
                </resource>
                <resource>
                  <directory>${project.build.directory}/generated-sources/javacc</directory>
                  <includes>
                    <include>com/dremio/exec/expr/fn/impl/**/*.java</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-sources-as-resources</id>
            <phase>process-test-sources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/test/java</directory>
                  <includes>
                    <include>com/dremio/exec/fn/impl/testing/GeneratorFunctions.java</include>
                    <include>com/dremio/exec/testing/TestResourceLeak.java</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.dremio</groupId>
            <artifactId>dremio-common</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>classpath-scanning</id>
            <phase>process-classes</phase>
            <goals><goal>java</goal></goals>
            <configuration>
              <mainClass>com.dremio.common.scanner.BuildTimeScan</mainClass>
              <includePluginDependencies>true</includePluginDependencies>
              <arguments>
                <argument>${project.build.outputDirectory}</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>reserved-SQL-keyword-list-generation</id>
            <!-- We need the generator class, that's why this is executed after compile phase -->
            <phase>process-classes</phase>
            <goals><goal>java</goal></goals>
            <configuration>
              <mainClass>com.dremio.exec.planner.sql.parser.SqlReservedKeywordGenerator</mainClass>
              <arguments>
                <argument>${project.build.outputDirectory}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <!-- we override the default test execution to exclude tests
              that would take unusually long time to run (> 1 minute) and run such tests
              in a different profile -->
            <id>default-test</id>
            <phase>test</phase>
            <goals><goal>test</goal></goals>
            <configuration>
              <excludes>
                <exclude>**/TestLargeFileCompilation.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals><goal>copy-resources</goal></goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/test/resources/</directory>
                  <includes>
                    <include>multilevel/**</include>
                    <include>parquet/**</include>
                  </includes>
                  <filtering>false</filtering>
                </resource>
              </resources>
              <outputDirectory>${project.build.directory}/src-resources</outputDirectory>
            </configuration>
          </execution>
          <execution> <!-- copy all templates/data in the same location to compile them at once -->
            <id>copy-fmpp-resources</id>
            <phase>initialize</phase>
            <goals><goal>copy-resources</goal></goals>
            <configuration>
              <outputDirectory>${project.build.directory}/codegen</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/codegen</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <id>jar-resources</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.directory}/src-resources</classesDirectory>
              <skipIfEmpty>true</skipIfEmpty>
              <classifier>resources</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
